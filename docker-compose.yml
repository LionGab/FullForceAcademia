version: '3.8'

services:
  # WAHA - WhatsApp HTTP API
  waha:
    image: devlikeapro/waha
    container_name: academia-waha
    ports:
      - "3000:3000"
    environment:
      - WHATSAPP_HOOK_URL=http://n8n:5678/webhook/academia-whatsapp
      - WHATSAPP_HOOK_EVENTS=message,session.status
      - WHATSAPP_DEFAULT_ENGINE=NOWEB
      - WHATSAPP_START_BROWSER_TIMEOUT=60
      - WAHA_API_KEY=academia_secure_key_2024
    volumes:
      - waha_data:/app/.sessions
    networks:
      - academia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # n8n - Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: academia-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=academia123
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n123
      - GENERIC_TIMEZONE=America/Sao_Paulo
      - TZ=America/Sao_Paulo
      - N8N_LOG_LEVEL=info
      - N8N_METRICS=true
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - academia-network
    restart: unless-stopped

  # PostgreSQL - Database
  postgres:
    image: postgres:15-alpine
    container_name: academia-postgres
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n123
      - POSTGRES_NON_ROOT_USER=n8n
      - POSTGRES_NON_ROOT_PASSWORD=n8n123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - academia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n -d n8n"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis - Cache e Queue
  redis:
    image: redis:7-alpine
    container_name: academia-redis
    command: redis-server --appendonly yes --requirepass redis123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - academia-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Adminer - Database Management
  adminer:
    image: adminer:latest
    container_name: academia-adminer
    ports:
      - "8080:8080"
    networks:
      - academia-network
    restart: unless-stopped

volumes:
  waha_data:
    name: academia_waha_data
  n8n_data:
    name: academia_n8n_data
  postgres_data:
    name: academia_postgres_data
  redis_data:
    name: academia_redis_data

networks:
  academia-network:
    name: academia-network
    driver: bridge