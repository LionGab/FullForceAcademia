{
  "name": "ffgym-automation-system",
  "version": "1.0.0",
  "description": "Sistema avançado de automação para FullForce Academia com MCPs e Agentes inteligentes",
  "main": "ffgym-system-initializer.js",
  "scripts": {
    "start": "node ffgym-system-initializer.js",
    "quick-start": "node ffgym-quick-start.js",
    "dev": "NODE_ENV=development MOCK_MODE=true node ffgym-system-initializer.js",
    "prod": "NODE_ENV=production node ffgym-system-initializer.js",
    "test": "node ffgym-system-initializer.js --test",
    "health": "node ffgym-system-initializer.js --health-check",
    "campaign:start": "node start-fullforce-system.js",
    "campaign:test": "node campanha-verao-executor.js teste",
    "campaign:prod": "node campanha-verao-executor.js producao",
    "campaign:simulate": "node campanha-verao-executor.js simulacao",
    "campaign:monitor": "node campanha-verao-executor.js monitor",
    "workflow": "node workflow-90-dias-transformacao.js",
    "workflow:full": "node workflow-90-dias-transformacao.js full",
    "workflow:simulate": "node workflow-90-dias-transformacao.js simulate",
    "workflow:monitor": "node workflow-90-dias-transformacao.js monitor",
    "mcp:init": "node -e \"require('./mcps/init-all-mcps.js')()\"",
    "agents:init": "node -e \"require('./agents/init-all-agents.js')()\"",
    "backup": "node scripts/backup-system.js",
    "restore": "node scripts/restore-system.js",
    "analytics": "node scripts/generate-analytics-report.js",
    "setup:demo": "node ffgym-quick-start.js",
    "setup:prod": "node scripts/production-setup.js",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write .",
    "docs": "jsdoc -c jsdoc.conf.json",
    "analyze": "bash analise-repositorio.sh",
    "analyze:repo": "bash analise-repositorio.sh",
    "install-deps": "npm install",
    "setup": "npm run install-deps && echo '✅ FFGym System instalado. Execute: npm run quick-start'"
  },
  "keywords": [
    "academy",
    "gym",
    "automation",
    "whatsapp",
    "ai",
    "mcp",
    "agents",
    "marketing",
    "conversion",
    "analytics",
    "n8n",
    "fullforce"
  ],
  "author": "FullForce Academy Development Team",
  "license": "MIT",
  "engines": {
    "node": ">=16.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fullforce-academia/ffgym-system.git"
  },
  "bugs": {
    "url": "https://github.com/fullforce-academia/ffgym-system/issues"
  },
  "homepage": "https://github.com/fullforce-academia/ffgym-system#readme",
  "dependencies": {
    "axios": "^1.12.2",
    "bcrypt": "^5.1.1",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.21.2",
    "express-rate-limit": "^6.10.0",
    "google-auth-library": "^9.15.1",
    "google-spreadsheet": "^4.1.5",
    "helmet": "^7.0.0",
    "http-proxy-middleware": "^2.0.6",
    "joi": "^17.9.2",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "morgan": "^1.10.0",
    "pg": "^8.16.3",
    "pino": "^8.21.0",
    "pino-pretty": "^10.3.1",
    "redis": "^4.7.1",
    "uuid": "^9.0.0",
    "readline": "^1.3.0"
  },
  "devDependencies": {
    "eslint": "^8.47.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-node": "^11.1.0",
    "jest": "^29.6.4",
    "jsdoc": "^4.0.2",
    "nodemon": "^3.0.1",
    "pm2": "^5.3.0",
    "prettier": "^3.0.2",
    "supertest": "^6.3.3"
  },
  "optionalDependencies": {
    "canvas": "^2.11.2",
    "puppeteer": "^21.0.0"
  },
  "ffgym": {
    "version": "1.0.0",
    "type": "automation-system",
    "target": "fullforce-academia",
    "location": "matupa-mt",
    "components": {
      "mcps": [
        "whatsapp-automation",
        "gym-analytics",
        "n8n-integration",
        "lead-segmentation",
        "conversion-analytics"
      ],
      "agents": [
        "campaign-master",
        "data-analyst",
        "message-optimizer",
        "roi-optimizer",
        "critical-handler"
      ],
      "subAgents": [
        "vip-specialist",
        "hot-specialist",
        "warm-specialist",
        "cold-specialist",
        "champion-specialist",
        "atrisk-specialist"
      ]
    },
    "integrations": [
      "waha-api",
      "n8n-workflows",
      "google-sheets",
      "postgresql",
      "redis"
    ],
    "features": [
      "intelligent-segmentation",
      "automated-messaging",
      "real-time-analytics",
      "predictive-modeling",
      "continuous-optimization",
      "multi-channel-integration"
    ]
  },
  "config": {
    "unsafe-perm": true
  }
}